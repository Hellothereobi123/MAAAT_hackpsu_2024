{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tharu\\\\MAAAT_hackpsu_2024\\\\disaster_frontend\\\\src\\\\Back_end.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst app = express();\nconst cors = require('cors');\napp.use(cors());\nconst DataDisplay = () => {\n  _s();\n  const [data, setData] = useState(null);\n  const [error, setError] = useState('');\n\n  // Function to fetch data from the API\n  const fetchData = async () => {\n    try {\n      // Make sure to use the correct URL to your Flask API\n      const response = await axios.get('http://68.183.107.61:3002/');\n      setData(response.data); // Assuming response.data is the JSON you want\n      setError(''); // Clear any previous errors\n    } catch (err) {\n      setError('Error fetching data: ' + err.message);\n    }\n  };\n\n  // Removed useEffect that automatically fetches data on mount\n\n  // Function to handle button click\n  const handleButtonClick = () => {\n    fetchData(); // Call the fetchData function when the button is clicked\n  };\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    style: {\n      color: 'red'\n    },\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Data Display\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleButtonClick,\n      children: \"Fetch Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), \" \", data ? /*#__PURE__*/_jsxDEV(\"pre\", {\n      children: JSON.stringify(data, null, 2)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }, this) // This will display your data\n    : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No data loaded. Click the button to fetch data.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }, this) // Message when no data is loaded\n    ]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n_s(DataDisplay, \"q9tpO12PPVm5glkCcMhiRMcATgg=\");\n_c = DataDisplay;\nexport default DataDisplay;\nvar _c;\n$RefreshReg$(_c, \"DataDisplay\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","app","express","cors","require","use","DataDisplay","_s","data","setData","error","setError","fetchData","response","get","err","message","handleButtonClick","style","color","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","JSON","stringify","_c","$RefreshReg$"],"sources":["C:/Users/tharu/MAAAT_hackpsu_2024/disaster_frontend/src/Back_end.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nconst app = express();\r\nconst cors = require('cors');\r\napp.use(cors());\r\n\r\n\r\nconst DataDisplay = () => {\r\n    const [data, setData] = useState(null);\r\n    const [error, setError] = useState('');\r\n\r\n    // Function to fetch data from the API\r\n    const fetchData = async () => {\r\n        try {\r\n            // Make sure to use the correct URL to your Flask API\r\n            const response = await axios.get('http://68.183.107.61:3002/');\r\n            setData(response.data); // Assuming response.data is the JSON you want\r\n            setError(''); // Clear any previous errors\r\n        } catch (err) {\r\n            setError('Error fetching data: ' + err.message);\r\n        }\r\n    };\r\n\r\n    // Removed useEffect that automatically fetches data on mount\r\n\r\n    // Function to handle button click\r\n    const handleButtonClick = () => {\r\n        fetchData(); // Call the fetchData function when the button is clicked\r\n    };\r\n\r\n    if (error) return <p style={{ color: 'red' }}>{error}</p>;\r\n\r\n    return (\r\n        <div>\r\n            <h1>Data Display</h1>\r\n            <button onClick={handleButtonClick}>Fetch Data</button> {/* Button to fetch data */}\r\n            {data ? (\r\n                <pre>{JSON.stringify(data, null, 2)}</pre> // This will display your data\r\n            ) : (\r\n                <p>No data loaded. Click the button to fetch data.</p> // Message when no data is loaded\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DataDisplay;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC1B,MAAMC,GAAG,GAAGC,OAAO,CAAC,CAAC;AACrB,MAAMC,IAAI,GAAGC,OAAO,CAAC,MAAM,CAAC;AAC5BH,GAAG,CAACI,GAAG,CAACF,IAAI,CAAC,CAAC,CAAC;AAGf,MAAMG,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;;EAEtC;EACA,MAAMe,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC1B,IAAI;MACA;MACA,MAAMC,QAAQ,GAAG,MAAMf,KAAK,CAACgB,GAAG,CAAC,4BAA4B,CAAC;MAC9DL,OAAO,CAACI,QAAQ,CAACL,IAAI,CAAC,CAAC,CAAC;MACxBG,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;IAClB,CAAC,CAAC,OAAOI,GAAG,EAAE;MACVJ,QAAQ,CAAC,uBAAuB,GAAGI,GAAG,CAACC,OAAO,CAAC;IACnD;EACJ,CAAC;;EAED;;EAEA;EACA,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;IAC5BL,SAAS,CAAC,CAAC,CAAC,CAAC;EACjB,CAAC;EAED,IAAIF,KAAK,EAAE,oBAAOV,OAAA;IAAGkB,KAAK,EAAE;MAAEC,KAAK,EAAE;IAAM,CAAE;IAAAC,QAAA,EAAEV;EAAK;IAAAW,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAI,CAAC;EAEzD,oBACIxB,OAAA;IAAAoB,QAAA,gBACIpB,OAAA;MAAAoB,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrBxB,OAAA;MAAQyB,OAAO,EAAER,iBAAkB;MAAAG,QAAA,EAAC;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,KAAC,EACvDhB,IAAI,gBACDR,OAAA;MAAAoB,QAAA,EAAMM,IAAI,CAACC,SAAS,CAACnB,IAAI,EAAE,IAAI,EAAE,CAAC;IAAC;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,CAAC;IAAA,eAE3CxB,OAAA;MAAAoB,QAAA,EAAG;IAA+C;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,CAAC;IAC1D;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAACjB,EAAA,CApCID,WAAW;AAAAsB,EAAA,GAAXtB,WAAW;AAsCjB,eAAeA,WAAW;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}